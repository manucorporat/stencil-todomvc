/*! Built with http://stenciljs.com */
const{h:e}=window.todo;class t{constructor(e,t=!1,o=function(){let e="";for(let t=0;t<32;t++){const o=16*Math.random()|0;8!==t&&12!==t&&16!==t&&20!==t||(e+="-"),e+=(12===t?4:16===t?3&o|8:o).toString(16)}return e}()){this.title=e,this.completed=t,this.id=o}}const o="todos-stencil";class l{constructor(){this.todos=[]}add(e){return this.save(this.todos.concat(new t(e)))}editTitle(e,t){return this.edit(e.id,e=>Object.assign({},e,{title:t}))}toggleCompleted(e){return this.edit(e.id,e=>Object.assign({},e,{completed:!e.completed}))}toggleAll(e){return this.save(this.todos.map(t=>Object.assign({},t,{completed:e})))}delete(e){return this.save(this.todos.filter(t=>t.id!==e.id))}clearCompleted(){return this.save(this.todos.filter(e=>!e.completed))}load(){return window.localStorage?this.todos=JSON.parse(localStorage.getItem(o)||"[]"):this.todos=[]}save(e){return window.localStorage&&localStorage.setItem(o,JSON.stringify(e)),this.todos=e}edit(e,t){return this.save(this.todos.map(o=>e===o.id?t(o):o))}}const s=13;class i{constructor(){this.todoService=new l,this.todos=this.todoService.load(),this.filter="all"}get filteredTodos(){switch(this.filter){case"active":return this.todos.filter(e=>!e.completed);case"completed":return this.todos.filter(e=>e.completed);default:return this.todos}}componentWillLoad(){this.updateFilterFromUrl(document.location.href)}render(){return e("section",{class:"todoapp"},e("header",{class:"header"},e("h1",null,"todos"),e("input",{class:"new-todo",placeholder:"What needs to be done?",autoComplete:"on",autoFocus:!0,onKeyUp:e=>this.onKeyUp(e)})),e("todo-list",{todos:this.filteredTodos}),this.todos.length>0?e("todo-footer",{todos:this.todos,filter:this.filter}):null)}todoDeleted(e){this.todos=this.todoService.delete(e.detail)}toggleCompleted(e){this.todos=this.todoService.toggleCompleted(e.detail)}editTitle(e){this.todos=this.todoService.editTitle(e.detail.todo,e.detail.newTitle)}toggleAll(e){this.todos=this.todoService.toggleAll(e.detail)}onKeyUp(e){if(e.keyCode===s){const t=e.target;""!==t.value.trim()&&(this.todos=this.todoService.add(t.value),t.value="")}}hashChanged(e){this.updateFilterFromUrl(e.newURL)}updateFilterFromUrl(e){this.filter=e&&e.split("#/")[1]||"all"}clearCompleted(){this.todos=this.todoService.clearCompleted()}static get is(){return"todo-app"}static get properties(){return{filter:{state:!0},todos:{state:!0}}}static get listeners(){return[{name:"todoDeleted",method:"todoDeleted"},{name:"toggleCompleted",method:"toggleCompleted"},{name:"editTitle",method:"editTitle"},{name:"toggleAll",method:"toggleAll"},{name:"window:hashchange",method:"hashChanged"},{name:"clearCompleted",method:"clearCompleted"}]}}class d{render(){let t=null;return this.todos.some(e=>e.completed)&&(t=e("button",{class:"clear-completed",onClick:e=>this.clearCompleted.emit()},"Clear completed")),e("footer",{class:"footer"},this.renderTodoCount(),e("ul",{class:"filters"},e("li",null,e("a",{class:{selected:"all"===this.filter},href:"#/"},"All")),e("li",null,e("a",{class:{selected:"active"===this.filter},href:"#/active"},"Active")),e("li",null,e("a",{class:{selected:"completed"===this.filter},href:"#/completed"},"Completed"))),t)}renderTodoCount(){const t=this.todos.filter(e=>!e.completed).length;return e("span",{class:"todo-count"},e("strong",null,t)," ",t>1||t<1?"items":"item"," left")}static get is(){return"todo-footer"}static get properties(){return{filter:{type:String,attr:"filter"},todos:{type:"Any",attr:"todos"}}}static get events(){return[{name:"clearCompleted",method:"clearCompleted",bubbles:!0,cancelable:!0,composed:!0}]}}const r=13,a=27;class n{render(){return this.todos.length<=0?null:e("section",{class:"main"},e("input",{id:"toggle-all",class:"toggle-all",type:"checkbox",onClick:e=>this.onToggleAll(),checked:this.allCompleted()}),e("label",{htmlFor:"toggle-all"},"Mark all as complete"),e("ul",{class:"todo-list"},this.todos.map(e=>this.renderTodo(e))))}renderTodo(t){return e("li",{class:{completed:t.completed,editing:t.id===this.editing}},e("div",{class:"view"},e("input",{class:"toggle",type:"checkbox",checked:t.completed,onChange:e=>this.toggle(t)}),e("label",{onDblClick:e=>this.edit(t,e)},t.title),e("button",{class:"destroy",onClick:e=>this.deleteTodo(t)})),e("input",{class:"edit",onBlur:e=>this.doneEdit(t,e),onKeyUp:e=>this.onKeyUp(t,e),value:t.title}))}allCompleted(){return 0===this.todos.filter(e=>!e.completed).length}toggle(e){this.toggleCompleted.emit(e)}deleteTodo(e){this.todoDeleted.emit(e)}onToggleAll(){this.toggleAll.emit(!this.allCompleted())}edit(e,t){this.editing=e.id,setTimeout(()=>{const e=this.el.getElementsByClassName("editing")[0].getElementsByClassName("edit")[0];e.focus(),e.selectionStart=e.value.length},0)}onKeyUp(e,t){t.keyCode===r?this.doneEdit(e,t):t.keyCode===a&&(this.editing=null)}doneEdit(e,t){this.editing=null;const o=t.target.value.trim();o&&o.length>0?this.editTitle.emit({todo:e,newTitle:o}):this.deleteTodo(e)}static get is(){return"todo-list"}static get properties(){return{editing:{state:!0},el:{elementRef:!0},todos:{type:"Any",attr:"todos"}}}static get events(){return[{name:"todoDeleted",method:"todoDeleted",bubbles:!0,cancelable:!0,composed:!0},{name:"toggleCompleted",method:"toggleCompleted",bubbles:!0,cancelable:!0,composed:!0},{name:"editTitle",method:"editTitle",bubbles:!0,cancelable:!0,composed:!0},{name:"toggleAll",method:"toggleAll",bubbles:!0,cancelable:!0,composed:!0}]}}export{i as TodoApp,d as TodoFooter,n as TodoList};